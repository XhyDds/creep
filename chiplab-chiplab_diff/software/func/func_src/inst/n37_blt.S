#include "asm.h"
#include "regdef.h"
#include "inst_test.h"

LEAF(n37_blt_test)
    
    addi.w s0, s0 ,1
    li.w  s2, 0x0
###test inst
    TEST_BLT(0x53da7664, 0xd0bb3643, 0xede1bda0, 0x9184955e, 0x00000000, 0x00000000)
    TEST_BLT(0xc815806e, 0x1d9f9515, 0xc6ecc9a4, 0x6f0d3944, 0xc6ecc9a4, 0x6f0d3944)
    TEST_BLT(0x77b54655, 0x4738bd02, 0xbf9ef915, 0xae4455e3, 0x00000000, 0x00000000)
    TEST_BLT(0xb94ac606, 0x48e54b38, 0x2d492742, 0xf0458c71, 0x2d492742, 0xf0458c71)
    TEST_BLT(0x1eb79ae2, 0x27b38a36, 0x1b4e290b, 0x3cdfbf00, 0x1b4e290b, 0x3cdfbf00)
    TEST_BLT(0xaed6c199, 0xe6964dd7, 0x141163d8, 0x60895d67, 0x141163d8, 0x60895d67)
    TEST_BLT(0x5c2fa79f, 0xbe27911d, 0x93bd821c, 0xd003ade1, 0x00000000, 0x00000000)
    TEST_BLT(0xcf34d026, 0x75167ba9, 0xa1b7645b, 0x612c73b2, 0xa1b7645b, 0x612c73b2)
    TEST_BLT(0xe8e6d988, 0xb52c4017, 0x7e4e2a1f, 0xd9573e07, 0x00000000, 0x00000000)
    TEST_BLT(0x7ddece27, 0xa0c9065b, 0xd56bae3c, 0x9b555f26, 0x00000000, 0x00000000)
    TEST_BLT(0x446a608c, 0x942f1661, 0xb817fdfc, 0xd4bce74a, 0x00000000, 0x00000000)
    TEST_BLT(0x78bb2409, 0x690a85fa, 0x7e01f80f, 0x14a7b84d, 0x00000000, 0x00000000)
    TEST_BLT(0xbdfffe71, 0xee771b20, 0x6471c564, 0x5428bf72, 0x6471c564, 0x5428bf72)
    TEST_BLT(0x5adcba9f, 0xaa2ac5d2, 0xe7fea82d, 0xb3170c9f, 0x00000000, 0x00000000)
    TEST_BLT(0xed86541e, 0x8045395a, 0x2e9864b2, 0xd0d6d195, 0x00000000, 0x00000000)
    TEST_BLT(0x558d7909, 0x4d1f37c9, 0xa2c1382a, 0x6d9ff3aa, 0x00000000, 0x00000000)
    TEST_BLT(0x6135797f, 0x27166b7a, 0x4ef20ce4, 0xf343f80c, 0x00000000, 0x00000000)
    TEST_BLT(0xa0702207, 0xf2d41836, 0xda18e3b7, 0x6241848d, 0xda18e3b7, 0x6241848d)
    TEST_BLT(0x62afa28c, 0x5cdd0fe4, 0xc16d4f00, 0xb8049dea, 0x00000000, 0x00000000)
    TEST_BLT(0x19f507f5, 0x4ceb5e42, 0xdca0958d, 0xd6811234, 0xdca0958d, 0xd6811234)
    TEST_BLT(0x1727b000, 0xd1593176, 0xeecc7c01, 0x65e55cb5, 0x00000000, 0x00000000)
    TEST_BLT(0x0fdaaf0c, 0x70943d5f, 0xbaa32d76, 0x248baf02, 0xbaa32d76, 0x248baf02)
    TEST_BLT(0xf72529c2, 0xcdd1df40, 0x4f0ebf0f, 0xdc27f5d6, 0x00000000, 0x00000000)
    TEST_BLT(0x129ac1e0, 0x0f74639f, 0x4f8f17c5, 0x4ce97a77, 0x00000000, 0x00000000)
    TEST_BLT(0xaa0912ae, 0xdfd580a5, 0xbc7fc61f, 0x24e49fea, 0xbc7fc61f, 0x24e49fea)
    TEST_BLT(0x4661c512, 0x9efaece2, 0xc88fbe74, 0x45c0e0fb, 0x00000000, 0x00000000)
    TEST_BLT(0xbf6a059a, 0xff735960, 0xdfcbba7f, 0x29bf14a2, 0xdfcbba7f, 0x29bf14a2)
    TEST_BLT(0x5a5356d9, 0x36005ecf, 0x4ff48883, 0xf3687bbe, 0x00000000, 0x00000000)
    TEST_BLT(0x2cf7471c, 0x26df9964, 0x99bfc510, 0x963d921c, 0x00000000, 0x00000000)
    TEST_BLT(0xe3a36a18, 0x4929d9d6, 0xd3c63441, 0xef43318c, 0xd3c63441, 0xef43318c)
    TEST_BLT(0x47329783, 0x06ca43af, 0xd5ba394a, 0x2e887bec, 0x00000000, 0x00000000)
    TEST_BLT(0x497fab1a, 0xb0cf2acf, 0xaf4d670c, 0xdaec7c55, 0x00000000, 0x00000000)
    TEST_BLT(0x4d58da8a, 0x095712a8, 0x67a1ce99, 0x8c23565b, 0x00000000, 0x00000000)
    TEST_BLT(0xa6d91574, 0x65381d69, 0x07131c96, 0x7ca4d818, 0x07131c96, 0x7ca4d818)
    TEST_BLT(0x4c2159c4, 0xa13f7791, 0xd35c31bf, 0x84c5dd8f, 0x00000000, 0x00000000)
    TEST_BLT(0x94e3ed4d, 0x24cbbd5b, 0x60659132, 0x2714483d, 0x60659132, 0x2714483d)
    TEST_BLT(0x13f7c52b, 0x40fa26ce, 0xaa18a774, 0x740172f3, 0xaa18a774, 0x740172f3)
    TEST_BLT(0xd01513cb, 0x60d8e32f, 0x3e898672, 0xc2d24baf, 0x3e898672, 0xc2d24baf)
    TEST_BLT(0x48b778ac, 0x5bf84968, 0x121d9d2d, 0xc1d9aabf, 0x121d9d2d, 0xc1d9aabf)
    TEST_BLT(0x6e1cfd53, 0x98894f58, 0x71a4148d, 0xed51f84c, 0x00000000, 0x00000000)
    TEST_BLT(0x31fd17ca, 0xce3b9103, 0x08a666cc, 0xbc1389ed, 0x00000000, 0x00000000)
    TEST_BLT(0x61be6c89, 0x42bc4bbe, 0x489ea3d6, 0x1741704c, 0x00000000, 0x00000000)
    TEST_BLT(0x2de278af, 0x57395d5d, 0xd3dd3a8d, 0x378a4daf, 0xd3dd3a8d, 0x378a4daf)
    TEST_BLT(0x06e8766a, 0x48d892d0, 0x8fb0794b, 0x3898fb67, 0x8fb0794b, 0x3898fb67)
    TEST_BLT(0xc4de7ec2, 0xfc4df960, 0x0fef198d, 0x8fcf6314, 0x0fef198d, 0x8fcf6314)
    TEST_BLT(0x2a0ed7a1, 0xb05074cb, 0xa64087dd, 0xf04c8a14, 0x00000000, 0x00000000)
    TEST_BLT(0x40935af9, 0x2fdd596f, 0x49d5a13b, 0x20027659, 0x00000000, 0x00000000)
    TEST_BLT(0x1cf4c2d1, 0x4452107b, 0x7500aa57, 0x10df15af, 0x7500aa57, 0x10df15af)
    TEST_BLT(0x0936a3d3, 0x6c5d34d6, 0xee613a4d, 0x0d1964a2, 0xee613a4d, 0x0d1964a2)
    TEST_BLT(0xcdc00dd3, 0xd5e303da, 0xb8419928, 0x07cb8f7c, 0xb8419928, 0x07cb8f7c)
    TEST_BLT(0xa26602bd, 0x7f0fcc4c, 0x40428597, 0x52a2cdee, 0x40428597, 0x52a2cdee)
    TEST_BLT(0xb3ace5dc, 0xec4487e4, 0x6d6ced0f, 0x0591e16c, 0x6d6ced0f, 0x0591e16c)
    TEST_BLT(0x0c081d5e, 0x10144596, 0xea28210f, 0xe5f151ef, 0xea28210f, 0xe5f151ef)
    TEST_BLT(0x1e412d45, 0x74d6075e, 0xd37f424c, 0x63fa277d, 0xd37f424c, 0x63fa277d)
    TEST_BLT(0xf97ebd35, 0x8e2a0d25, 0xa9948a64, 0x3c49bb30, 0x00000000, 0x00000000)
    TEST_BLT(0x4855fe36, 0xd0924d01, 0x99fb3c8c, 0x855ec5cb, 0x00000000, 0x00000000)
    TEST_BLT(0x4579b1c2, 0x726e8301, 0xef9487c5, 0x3e277eb8, 0xef9487c5, 0x3e277eb8)
    TEST_BLT(0xee903689, 0x53dc892f, 0x1c547b70, 0x384821b7, 0x1c547b70, 0x384821b7)
    TEST_BLT(0xec65a664, 0xb73c2cc1, 0x6f9648d2, 0x089d2328, 0x00000000, 0x00000000)
    TEST_BLT(0x938823dc, 0x6359372c, 0xaadd06b5, 0x7bd5f4d3, 0xaadd06b5, 0x7bd5f4d3)
    TEST_BLT(0x4c07892f, 0x577be83d, 0xaa49e87d, 0x0c78be6e, 0xaa49e87d, 0x0c78be6e)
    TEST_BLT(0x547a03a3, 0xb1ecb334, 0xce61d1a3, 0x910fc958, 0x00000000, 0x00000000)
    TEST_BLT(0x094a7cba, 0x6964ba04, 0xaf030ef3, 0x5c1487d2, 0xaf030ef3, 0x5c1487d2)
    TEST_BLT(0x39d3e4ea, 0x9679e3a3, 0x840be4b6, 0x073d1d0c, 0x00000000, 0x00000000)
    TEST_BLT(0x545bad70, 0x2ea73fe3, 0x2280787e, 0xa0ed19ee, 0x00000000, 0x00000000)
    TEST_BLT(0xd98dfd7e, 0xc3d2a3af, 0xd6ed9ec1, 0x22300c1b, 0x00000000, 0x00000000)
    TEST_BLT(0x02efda49, 0x0cfcd065, 0xa91a80e8, 0x5460e980, 0xa91a80e8, 0x5460e980)
    TEST_BLT(0xcc41a70a, 0xdf5bbb48, 0x40a5f659, 0xc18e1063, 0x40a5f659, 0xc18e1063)
    TEST_BLT(0x317f28f1, 0xba189820, 0x324bc642, 0x200c438f, 0x00000000, 0x00000000)
    TEST_BLT(0x9e58dc1b, 0x9122e351, 0xf6b1b551, 0x57435eeb, 0x00000000, 0x00000000)
    TEST_BLT(0x1c424a1e, 0x77c6dcf9, 0xd77669c2, 0x0534a6e0, 0xd77669c2, 0x0534a6e0)
    TEST_BLT(0x5202906f, 0x15adf10a, 0x65c8e889, 0xf01e84ff, 0x00000000, 0x00000000)
    TEST_BLT(0x1ed5e4c1, 0x8bd92108, 0xc32361ef, 0x35153897, 0x00000000, 0x00000000)
    TEST_BLT(0x1d73d19b, 0x9bba91cf, 0x5bd48eb1, 0x097850f0, 0x00000000, 0x00000000)
    TEST_BLT(0x138fc641, 0x6f02e904, 0x19180b11, 0x2e8d4032, 0x19180b11, 0x2e8d4032)
    TEST_BLT(0x8d538368, 0xfe50533a, 0x39220cb5, 0x651e256f, 0x39220cb5, 0x651e256f)
    TEST_BLT(0xdc769f9e, 0x3230ea0e, 0x51ce0deb, 0x9873f8b5, 0x51ce0deb, 0x9873f8b5)
    TEST_BLT(0x91e64a53, 0xf2062721, 0xa802b5bb, 0x88587b9a, 0xa802b5bb, 0x88587b9a)
    TEST_BLT(0x937298e1, 0x8508905c, 0xdeda86a5, 0x8f5a490a, 0x00000000, 0x00000000)
    TEST_BLT(0x4836e136, 0x2095c3fb, 0x88a91e8e, 0xc4db0b57, 0x00000000, 0x00000000)
    TEST_BLT(0x44237785, 0x31bbfaea, 0xe0f1aca4, 0x53d874ac, 0x00000000, 0x00000000)
    TEST_BLT(0x406ef500, 0x770bf657, 0x975c3474, 0x8b92b525, 0x975c3474, 0x8b92b525)
    TEST_BLT(0xe8f001b5, 0x5ebb0302, 0x55be4fa1, 0xa26d629f, 0x55be4fa1, 0xa26d629f)
    TEST_BLT(0x68eb8040, 0xb8d2d2be, 0x457bf0cc, 0x5034efa5, 0x00000000, 0x00000000)
    TEST_BLT(0xd7d35974, 0x0a1fecc6, 0xcb51a5ef, 0xb4554b2e, 0xcb51a5ef, 0xb4554b2e)
    TEST_BLT(0x8502ca33, 0x05879b20, 0x4f517d8f, 0xbcd84f7d, 0x4f517d8f, 0xbcd84f7d)
    TEST_BLT(0x8162d777, 0x0a15fa32, 0x253333fc, 0xdccaea69, 0x253333fc, 0xdccaea69)
    TEST_BLT(0xe97346af, 0xb7caf1fd, 0x4b417b1b, 0x610c6b05, 0x00000000, 0x00000000)
    TEST_BLT(0x40085ad3, 0x99f4db72, 0x8f0b4b73, 0xfb676c74, 0x00000000, 0x00000000)
    TEST_BLT(0x27a0c042, 0x9dde8b9b, 0x35af0c9a, 0xf88797fb, 0x00000000, 0x00000000)
    TEST_BLT(0xdce172a6, 0x8d600d2c, 0xc514ff2b, 0xb48fbb60, 0x00000000, 0x00000000)
    TEST_BLT(0x322399ff, 0x2f4211b9, 0xb4e31d20, 0x0360fe59, 0x00000000, 0x00000000)
    TEST_BLT(0x5273d9f9, 0x3339670d, 0x05e36485, 0x4919d3ed, 0x00000000, 0x00000000)
    TEST_BLT(0x2d941fa3, 0x4dde7291, 0xfcb66dcc, 0x704a9a76, 0xfcb66dcc, 0x704a9a76)
    TEST_BLT(0x9b715c86, 0x8ecfcccf, 0x3c1d1ba8, 0x7f52df1d, 0x00000000, 0x00000000)
    TEST_BLT(0x022b9a88, 0x4839f840, 0xa9ac8cda, 0x68cbd673, 0xa9ac8cda, 0x68cbd673)
    TEST_BLT(0x0b5903b3, 0x57f86275, 0xa458dcc3, 0x77dcd3f7, 0xa458dcc3, 0x77dcd3f7)
    TEST_BLT(0x8dde3ec3, 0x1547188c, 0xc0287e58, 0xcc362009, 0xc0287e58, 0xcc362009)
    TEST_BLT(0x56ed845a, 0x732722fd, 0x7aabbfc0, 0xcddada38, 0x7aabbfc0, 0xcddada38)
    TEST_BLT(0xbbb294ab, 0xcc4a7937, 0xb9d30cf4, 0x6fbaccd7, 0xb9d30cf4, 0x6fbaccd7)
    TEST_BLT(0x18287f18, 0x9accbd1f, 0x8a1f47fd, 0xdbeef4f8, 0x00000000, 0x00000000)
    TEST_BLT(0x3860128d, 0xa1e89c34, 0x342efb06, 0x2803c92d, 0x00000000, 0x00000000)
    TEST_BLT(0x68073886, 0x8c8b4104, 0xcbc5f7e4, 0xaefd3489, 0x00000000, 0x00000000)
    TEST_BLT(0x60d0406e, 0x64ac9206, 0x83a8810d, 0x952cda6c, 0x83a8810d, 0x952cda6c)
    TEST_BLT(0x86050b3c, 0xa574e1c3, 0x648f18cf, 0x7267d8b5, 0x648f18cf, 0x7267d8b5)
    TEST_BLT(0xff12bd73, 0x3c718a50, 0x45b7c492, 0x18524c06, 0x45b7c492, 0x18524c06)
    TEST_BLT(0x0fb188eb, 0xc8e44879, 0x59f3d193, 0x591d65f9, 0x00000000, 0x00000000)
    TEST_BLT(0x3881e925, 0x2a1153bd, 0x6dd2fc25, 0xe1db4d8e, 0x00000000, 0x00000000)
    TEST_BLT(0x10494750, 0x15dbc729, 0x25066068, 0x7fc6658a, 0x25066068, 0x7fc6658a)
    TEST_BLT(0x4bbbc94c, 0xe145f223, 0xbe116897, 0xb65aaab9, 0x00000000, 0x00000000)
    TEST_BLT(0xb07f8cf7, 0x099fdfc1, 0x6a57b95e, 0x649f2e03, 0x6a57b95e, 0x649f2e03)
    TEST_BLT(0x295b1b9d, 0x5388d6c4, 0x03b906f6, 0x4f7e9f54, 0x03b906f6, 0x4f7e9f54)
    TEST_BLT(0xd559e871, 0x56fc2633, 0x85d22192, 0x4d2c29ff, 0x85d22192, 0x4d2c29ff)
    TEST_BLT(0x2ec8260d, 0xfa1cf370, 0x5eaf03e3, 0x426793c3, 0x00000000, 0x00000000)
    TEST_BLT(0x1ca5f06a, 0x09d319cb, 0x273f9687, 0x0e8f7606, 0x00000000, 0x00000000)
    TEST_BLT(0xa23191ee, 0x831b9594, 0x133ef56d, 0x2c6860ae, 0x00000000, 0x00000000)
    TEST_BLT(0x52e4f9a7, 0xf07d209c, 0x30b278a9, 0xbadf7017, 0x00000000, 0x00000000)
    TEST_BLT(0xb9b4e4b8, 0x8f42987c, 0x7b06fbc7, 0x362045c3, 0x00000000, 0x00000000)
    TEST_BLT(0x7bd95e7e, 0xc0d66734, 0xbf4db257, 0x256656a2, 0x00000000, 0x00000000)
    TEST_BLT(0x7897e93d, 0x4840f98a, 0xa1413efc, 0x63c46d10, 0x00000000, 0x00000000)
    TEST_BLT(0xb1cfb9ed, 0x548c8a74, 0xe4a83183, 0x418ef16d, 0xe4a83183, 0x418ef16d)
    TEST_BLT(0x177c36f7, 0x60f1d8a1, 0x63f1311b, 0xba9925b3, 0x63f1311b, 0xba9925b3)
    TEST_BLT(0x023788d8, 0xa8fba152, 0x92c46044, 0x9f56768b, 0x00000000, 0x00000000)
    TEST_BLT(0x83f54384, 0x347dcc40, 0x240778b6, 0xc0ac6c39, 0x240778b6, 0xc0ac6c39)
    TEST_BLT(0x4b7bf4ee, 0xa70255d8, 0x05c1903e, 0xf9e81c14, 0x00000000, 0x00000000)
    TEST_BLT(0x149fa343, 0x5f91635b, 0x6274fbe9, 0xdb9f16fc, 0x6274fbe9, 0xdb9f16fc)
    TEST_BLT(0xc2867bae, 0xaa53b1d2, 0x2d786703, 0xf51c1bc8, 0x00000000, 0x00000000)
    TEST_BLT(0x3771f55e, 0xc9dce699, 0x7ab46ef4, 0x8dc78046, 0x00000000, 0x00000000)
    TEST_BLT(0xfb1129d8, 0x4ad2e4bf, 0x0cfd23f7, 0xfdd83440, 0x0cfd23f7, 0xfdd83440)
    TEST_BLT(0x0bac73d9, 0x49872294, 0x003e1ec6, 0x0f06424f, 0x003e1ec6, 0x0f06424f)
    TEST_BLT(0x313d409a, 0xd8492991, 0x5b3d4bb7, 0xd48e3c56, 0x00000000, 0x00000000)
    TEST_BLT(0xb0a6399e, 0x911d0f06, 0x42027727, 0x73ec4119, 0x00000000, 0x00000000)
    TEST_BLT(0x4acb8e6b, 0x8899b91b, 0x8bfa9e1b, 0x74031352, 0x00000000, 0x00000000)
    TEST_BLT(0x47edcb88, 0xda5e58ac, 0x02d7a97d, 0x44e95d16, 0x00000000, 0x00000000)
    TEST_BLT(0x09cbb191, 0x6c89e290, 0x657e102f, 0x6e8e75d7, 0x657e102f, 0x6e8e75d7)
    TEST_BLT(0x09de4b56, 0xe42a88f8, 0xde482b2c, 0xf9430bf0, 0x00000000, 0x00000000)
    TEST_BLT(0xe0bf77a8, 0x53efa440, 0xb39677af, 0xae4b3852, 0xb39677af, 0xae4b3852)
    TEST_BLT(0x02d7445b, 0x4ec50a9a, 0x35b68ab9, 0x81cd649f, 0x35b68ab9, 0x81cd649f)
    TEST_BLT(0x632ff3ea, 0xf9c93730, 0x1a9c7790, 0xbfa967ff, 0x00000000, 0x00000000)
    TEST_BLT(0x5f3b7ee7, 0xf4f82493, 0x44ab4f76, 0x5b70f479, 0x00000000, 0x00000000)
    TEST_BLT(0x385672ec, 0xd2376b93, 0x1ce639a1, 0xb3404bd0, 0x00000000, 0x00000000)
    TEST_BLT(0x2579c2f2, 0xa4c68f88, 0xce57559d, 0xfe07de55, 0x00000000, 0x00000000)
    TEST_BLT(0xf41bbf98, 0xa66f7c1f, 0x6195c814, 0x0f5af0b8, 0x00000000, 0x00000000)
    TEST_BLT(0xdca45820, 0xa8c78ccc, 0x0b78b891, 0x82d09b74, 0x00000000, 0x00000000)
    TEST_BLT(0x42b2adcb, 0x1c318898, 0x519dd4e4, 0xf8a43661, 0x00000000, 0x00000000)
    TEST_BLT(0x5e65a9c0, 0xa187d005, 0x66c1adf4, 0xcc63968f, 0x00000000, 0x00000000)
    TEST_BLT(0xcfedf241, 0x477f4a23, 0x8c29a848, 0x3ef25dde, 0x8c29a848, 0x3ef25dde)
    TEST_BLT(0xc8b25f25, 0xf1861c0b, 0xace6beb1, 0xbb1a5ec8, 0xace6beb1, 0xbb1a5ec8)
    TEST_BLT(0x510c7bb2, 0x8a1808e2, 0x52c8c251, 0xaf8ea791, 0x00000000, 0x00000000)
    TEST_BLT(0x8c8ae6d8, 0x82b346fa, 0xee7fd468, 0x18cf216f, 0x00000000, 0x00000000)
    TEST_BLT(0xf4eab8fb, 0x39aa880c, 0x5c3e53b0, 0x9bcbdb48, 0x5c3e53b0, 0x9bcbdb48)
    TEST_BLT(0x394fa540, 0x39f65fd6, 0x2f201a36, 0xb7d2b96a, 0x2f201a36, 0xb7d2b96a)
    TEST_BLT(0xfa280205, 0x939ee75d, 0xc0b6e4b5, 0xf20e7c31, 0x00000000, 0x00000000)
    TEST_BLT(0x4eafd7c1, 0x8726b1bb, 0xe4f51b3e, 0x0564ae59, 0x00000000, 0x00000000)
    TEST_BLT(0x22a41ade, 0x05a74cbf, 0x4d4ca00e, 0x764765fb, 0x00000000, 0x00000000)
    TEST_BLT(0xf2dd1f2f, 0xff118398, 0x1b8793b2, 0xcbbefdcc, 0x1b8793b2, 0xcbbefdcc)
    TEST_BLT(0x4d372c43, 0x5fe0a314, 0xe42d139c, 0xa536ed5a, 0xe42d139c, 0xa536ed5a)
    TEST_BLT(0xb98700e2, 0x545b9e1b, 0xeb2a8f0e, 0x7d626d3a, 0xeb2a8f0e, 0x7d626d3a)
    TEST_BLT(0xbbe292bf, 0xbcadceb6, 0x7f2696e4, 0x95cd4777, 0x7f2696e4, 0x95cd4777)
    TEST_BLT(0x66624001, 0x9e192f85, 0xd41cf06e, 0xe3a900bf, 0x00000000, 0x00000000)
    TEST_BLT(0x016f0851, 0xdbfaff48, 0xbed6374d, 0x1d3881ba, 0x00000000, 0x00000000)
    TEST_BLT(0x325d3229, 0xb0262cad, 0xbbd8c65b, 0xdd96d204, 0x00000000, 0x00000000)
    TEST_BLT(0xfbe6cb1b, 0x06215e98, 0x0d8c3292, 0x5f16cdaf, 0x0d8c3292, 0x5f16cdaf)
    TEST_BLT(0x91e08af2, 0xd99518f0, 0x6e862120, 0x427e715e, 0x6e862120, 0x427e715e)
    TEST_BLT(0x2788d2e5, 0xab7bb590, 0xd9c1c89d, 0x71f67bed, 0x00000000, 0x00000000)
    TEST_BLT(0xb2b6b6c6, 0x728eecbc, 0x029cbc1d, 0xab6fb35f, 0x029cbc1d, 0xab6fb35f)
    TEST_BLT(0xc68e0a47, 0x5803ecd8, 0x83457c2e, 0x19face22, 0x83457c2e, 0x19face22)
    TEST_BLT(0x0b4ad6fa, 0xc9822250, 0xb68d567d, 0xa8f80825, 0x00000000, 0x00000000)
    TEST_BLT(0x35f7006d, 0x3c06da76, 0xba4a46d2, 0xe34f4948, 0xba4a46d2, 0xe34f4948)
    TEST_BLT(0x555e8005, 0xa1474d0d, 0x6fbafaeb, 0x37b47fba, 0x00000000, 0x00000000)
    TEST_BLT(0x90cabcef, 0x4c2eed42, 0x133a6861, 0x956f9a25, 0x133a6861, 0x956f9a25)
    TEST_BLT(0x2c068a7f, 0x20d85db2, 0x66873497, 0xfe6c607b, 0x00000000, 0x00000000)
    TEST_BLT(0xe5b99275, 0x9d99345f, 0x01fa13b6, 0xaac2e473, 0x00000000, 0x00000000)
    TEST_BLT(0x8687c4e5, 0x516e03c3, 0xb4887664, 0x77f66359, 0xb4887664, 0x77f66359)
    TEST_BLT(0x0364bc9e, 0x491b4276, 0xa528a7e8, 0xe42508a6, 0xa528a7e8, 0xe42508a6)
    TEST_BLT(0xcfa6192a, 0xf4574fe3, 0xe5e943e6, 0x8daf4fda, 0xe5e943e6, 0x8daf4fda)
    TEST_BLT(0x488be0d1, 0x519ede65, 0xd43a31de, 0xc91dc292, 0xd43a31de, 0xc91dc292)
    TEST_BLT(0x69e02caf, 0x0026c35d, 0xe73c5ffc, 0x4a5ef522, 0x00000000, 0x00000000)
    TEST_BLT(0xf81a98a1, 0x1aa51544, 0x9ee34a19, 0xbb4d59b8, 0x9ee34a19, 0xbb4d59b8)
    TEST_BLT(0x5f399ed6, 0x5e10a80d, 0xc7ccc3c5, 0x9695796e, 0x00000000, 0x00000000)
    TEST_BLT(0x3c4b3883, 0x61f90fa9, 0x9e25cf83, 0x4778680b, 0x9e25cf83, 0x4778680b)
    TEST_BLT(0xd68ac1df, 0x32721185, 0xd64351c2, 0x6eac1776, 0xd64351c2, 0x6eac1776)
    TEST_BLT(0xe82a1d2c, 0x32f8dc1c, 0xfaa4378b, 0x45087e02, 0xfaa4378b, 0x45087e02)
    TEST_BLT(0xf9d9d884, 0x4c74c972, 0xae9848f4, 0xb637b8c9, 0xae9848f4, 0xb637b8c9)
    TEST_BLT(0xef841e36, 0xb0f69388, 0x64d9b2e6, 0xe16da1f6, 0x00000000, 0x00000000)
    TEST_BLT(0xdd9ec445, 0xd02514a1, 0xc7b2c11d, 0xb1a6c31c, 0x00000000, 0x00000000)
    TEST_BLT(0x57ddcb46, 0xdd3f203c, 0xb23a9b68, 0xc9f6b54f, 0x00000000, 0x00000000)
    TEST_BLT(0x02286107, 0x5c9f8a75, 0x16f23974, 0x6fe0568a, 0x16f23974, 0x6fe0568a)
    TEST_BLT(0x7596c545, 0x575d8a22, 0xb1c2cfb8, 0xa48515bb, 0x00000000, 0x00000000)
    TEST_BLT(0xbf377846, 0xc8ee59de, 0x5804461d, 0x77ff7b91, 0x5804461d, 0x77ff7b91)
    TEST_BLT(0x250760c7, 0xb1a317af, 0x0cf7dbda, 0x56fb5ee8, 0x00000000, 0x00000000)
    TEST_BLT(0xb4610074, 0x2d992584, 0x4ea79c1b, 0x3473aa98, 0x4ea79c1b, 0x3473aa98)
    TEST_BLT(0x0b91880e, 0x5ed0b52b, 0xd8815b86, 0x3de999c1, 0xd8815b86, 0x3de999c1)
    TEST_BLT(0xc445fa0b, 0x290fed65, 0xcfc9b5f3, 0x0a9d244d, 0xcfc9b5f3, 0x0a9d244d)
    TEST_BLT(0x5a8117a2, 0x68a6d2a5, 0xe9a7d584, 0x72545de4, 0xe9a7d584, 0x72545de4)
    TEST_BLT(0x2c4a0d22, 0x186434b7, 0x0987db86, 0xdeacaa6b, 0x00000000, 0x00000000)
    TEST_BLT(0x30ec9458, 0x0d9e2d00, 0x68698fea, 0xb8d035f6, 0x00000000, 0x00000000)
    TEST_BLT(0xce7c34ac, 0xa4094b34, 0xded09bb5, 0x812058e5, 0x00000000, 0x00000000)
    TEST_BLT(0x6a24081b, 0x2b366d82, 0x8dec3f91, 0x4700c339, 0x00000000, 0x00000000)
    TEST_BLT(0x3538eeb9, 0x8b0aa6c5, 0x52fcddf1, 0xa5c20ecf, 0x00000000, 0x00000000)
    TEST_BLT(0xbfb46426, 0xe2b808ed, 0xecd116fe, 0x1d58f02c, 0xecd116fe, 0x1d58f02c)
###detect exception
    bne s2, zero, inst_error
###score ++
    addi.w s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    slli.w t1, s0, 24
    NOP4
    or t0, t1, s3 
    NOP4
    st.w t0, s1, 0
    jirl zero, ra, 0
END(n37_blt_test)
